name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit pytest coverage pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f ecomate-ai/requirements.txt ]; then pip install -r ecomate-ai/requirements.txt; fi
          if [ -f ecomate-ai/requirements-dev.txt ]; then pip install -r ecomate-ai/requirements-dev.txt; fi
      
      - name: Run pre-commit hooks
        run: pre-commit run --all-files
      
      - name: Run tests with coverage
        run: |
          cd ecomate-ai
          pytest -v --cov=services --cov=. --cov-report=xml --cov-report=html --cov-report=term-missing
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./ecomate-ai/coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
      
      - name: Archive coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report-${{ matrix.python-version }}
          path: ecomate-ai/htmlcov/