version: "3.8"

services:
  # EcoMate AI API
  ecomate-api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://${PGUSER:-postgres}:${PGPASSWORD:-postgres}@postgres:5432/${PGDATABASE:-ecomate}
      - REDIS_URL=redis://redis:6379
      - TEMPORAL_HOST=temporal:7233
      - INFLUXDB_URL=http://influxdb:8086
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ROOT_USER=${MINIO_ROOT_USER}
      - MINIO_ROOT_PASSWORD=${MINIO_ROOT_PASSWORD}
      - NATS_URL=nats://nats:4222
    depends_on:
      - postgres
      - redis
      - temporal
      - influxdb
      - minio
      - nats
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

  # PostgreSQL Database with pgvector
  postgres:
    image: pgvector/pgvector:pg16
    environment:
      POSTGRES_USER: ${PGUSER:-postgres}
      POSTGRES_PASSWORD: ${PGPASSWORD:-postgres}
      POSTGRES_DB: ${PGDATABASE:-ecomate}
    ports: ["5432:5432"]
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./storage/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # InfluxDB for time-series IoT data
  influxdb:
    image: influxdb:2.7
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=ecomate
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=password
      - INFLUXDB_USER=ecomate
      - INFLUXDB_USER_PASSWORD=password
    volumes:
      - influxdb_data:/var/lib/influxdb2
    restart: unless-stopped

  # MinIO for object storage
  minio:
    image: quay.io/minio/minio:RELEASE.2024-10-02T17-50-41Z
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports: ["9000:9000","9001:9001"]
    volumes:
      - minio:/data
    restart: unless-stopped

  # Temporal Server
  temporal:
    image: temporalio/auto-setup:1.24.0
    environment:
      DB: postgresql
      DB_PORT: 5432
      POSTGRES_USER: ${PGUSER:-postgres}
      POSTGRES_PWD: ${PGPASSWORD:-postgres}
      POSTGRES_SEEDS: postgres
      DYNAMIC_CONFIG_FILE_PATH: config/dynamicconfig/temporal_docker.yaml
    ports: ["7233:7233","8088:8088"]
    depends_on:
      - postgres
    restart: unless-stopped

  # NATS for messaging
  nats:
    image: nats:2.10
    command: ["-js"]
    ports: ["4222:4222","8222:8222"]
    restart: unless-stopped

  # MQTT Broker for IoT devices
  mosquitto:
    image: eclipse-mosquitto:2.0
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - mosquitto_data:/mosquitto/data
      - mosquitto_logs:/mosquitto/log
    restart: unless-stopped

  # Prometheus for monitoring
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped

volumes:
  pgdata: {}
  minio: {}
  redis_data: {}
  influxdb_data: {}
  mosquitto_data: {}
  mosquitto_logs: {}
  prometheus_data: {}
  grafana_data: {}

networks:
  default:
    name: ecomate-network